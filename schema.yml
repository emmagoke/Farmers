openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/auth/login:
    post:
      operationId: auth_login_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/signup:
    post:
      operationId: auth_signup_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/csv:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/farmers:
    post:
      operationId: farmers_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - farmers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterFarmer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterFarmer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterFarmer'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterFarmer'
            text/csv:
              schema:
                $ref: '#/components/schemas/RegisterFarmer'
          description: ''
  /api/farmers/{id}:
    get:
      operationId: farmers_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - farmers
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farmer'
            text/csv:
              schema:
                $ref: '#/components/schemas/Farmer'
          description: ''
  /api/farmers/users/{id}:
    get:
      operationId: farmers_users_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - farmers
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedFarmerList'
          description: ''
components:
  schemas:
    Farmer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        phone_number:
          type: string
          maxLength: 14
        age:
          type: integer
        address:
          type: string
          maxLength: 150
        crops:
          type: string
          maxLength: 150
        season_best_for_crops:
          type: string
          maxLength: 15
        user_id:
          type: integer
          writeOnly: true
      required:
      - address
      - age
      - crops
      - first_name
      - id
      - last_name
      - phone_number
      - season_best_for_crops
      - user_id
    PaginatedFarmerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Farmer'
    RegisterFarmer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        phone_number:
          type: string
          maxLength: 14
        age:
          type: integer
        address:
          type: string
          maxLength: 150
        crops:
          type: string
          maxLength: 150
        season_best_for_crops:
          type: string
          maxLength: 15
        user_id:
          type: integer
          nullable: true
      required:
      - address
      - age
      - crops
      - first_name
      - id
      - last_name
      - phone_number
      - season_best_for_crops
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          maxLength: 254
        phone_number:
          type: string
          maxLength: 14
        password:
          type: string
          writeOnly: true
      required:
      - email
      - id
      - password
      - phone_number
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
